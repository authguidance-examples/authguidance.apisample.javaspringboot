M1: Get claims passed through to controllers and logic completed
----------------------------------------------------------------

1. Understand ResourceServerTokenServices interface better
   What are the roles of the 2 methods?
   Typically what goes into a principal object and other similar objects?
   What type of AuthenticationToken should I return?
   https://www.baeldung.com/spring-security-oauth-jwt

2. Implement ClaimsService and understand it better
   What is the effect of setting each field - try to find some documentation?
   First deliverable should be a hard coded solution to pass claims to the controllers

     https://github.com/jirutka/spring-security-oauth-samples/blob/master/sparklr/src/main/java/org/springframework/security/oauth/examples/sparklr/oauth/RemoteTokenServices.java
     https://stackoverflow.com/questions/43148552/how-to-configure-spring-boot-security-oauth2-for-adfs

3. PrincipalExtractor and AuthoritiesExtractor use the following library - do I need it?
        <dependency>
			<groupId>org.springframework.security.oauth.boot</groupId>
			<artifactId>spring-security-oauth2-autoconfigure</artifactId>
			<version>2.1.1.RELEASE</version>
		</dependency>

M2: Java polish up and learning
-------------------------------
1. Where does this debug message come from?
   'Using generated security password'

2. I need to try to inject my JSON configuration into ApiSecurityConfiguration
   Also inject SecurityContextHolder into API operations
   These may have request scoper, which I don't properly understand

3. Claims Service fires twice for async requests
   I need to control when it runs via security.filter-dispatcher-types=REQUEST, ERROR
   I'd like to do this as part of the fluent configuration in ApiSecurityConfiguration.configure
   Alternatively I may need to create a FilterRegistrationBean
   https://github.com/spring-projects/spring-security-oauth/issues/736

M3: Integrate a certified library
---------------------------------
1. Get calls to OAuth server working, along with Fiddler debugging
     https://bitbucket.org/connect2id/oauth-2.0-sdk-with-openid-connect-extensions
     
     // Introspect is in OAuth library as opposed to OIDC library
     https://static.javadoc.io/com.nimbusds/oauth2-oidc-sdk/5.0/com/nimbusds/oauth2/sdk/TokenIntrospectionRequest.html
     https://mvnrepository.com/artifact/com.nimbusds/oauth2-oidc-sdk